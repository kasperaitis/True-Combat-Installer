//==========================================================================================
//
//  1944 Overlord - 1944_overlord.gm
//
//  Who         When            What
//------------------------------------------------------------------------------------------
//  Mateos      02/09/2014      Lot of fixes required, was an incomplete 0.71 work...
//  jaskot      04/02/2009      Added paththrough for transmitter ladder for
//                              unopposed offense and added tank MOVER and BUILD
//                              offset sync
//  jaskot      03/02/2009      Converted old script to new format
//
//==========================================================================================
//

/****************************************************
Path mapping updated and script by Mateos
Correspondant WAY file size: -
Last update: 1st May 2017
****************************************************/

/*
 * TODO:
 * - General goal management
 * - Add weapon goals
 *
 * - PLANT_Forward_Bunker_Doors: ROLE with Allied Lander Spawn 2?
 * - Make a path through for the sort-of ladder on the Beach
 * - Turn some ATTACK_Alpha spots into CAMP (5 to 10)?
 */

/*
 * Spawn List:
 * 1: Allied Lander Spawn 1
 * 2: Axis Bunker Spawn
 * 3: Allied Transmitter Spawn
 * 4: Axis Reserve Spawn
 * 5: Allied Lander Spawn 2
 */

global Map =
{
    Debug = 0,  // Please set to zero before distributing your script

    // ************************************************************************

    // Dynamite counters
    Alllied_Transmitter_Dyno = 0,
    Axis_Bunker_Wall_Dyno = 0,
    Axis_Command_Post_Dyno = 0,
    Axis_Generator_Dyno = 0,
    Axis_Library_Rear_Door_Dyno = 0,
    Forward_Bunker_Doors_Dyno = 0,

    // Objectives status
    isAlliedTransmitterSpawnAvailable = false,
    isAxisBunkerWallDestroyed = false,
    isAxisGeneratorDestroyed = false,

    // A variable to control the messy wm_announce's...
    iAlliedTransmitterCount = 0,

    // How many documents are in the nature (stolen or dropped)
    iDocumentsCount = 0,

    // Track what documents are secured or still available
    areLowerDocumentsAvailable = true,
    areUpperDocumentsAvailable = true,

    // Spawns to switch to if still available
    AXIS_BUNKER_SPAWN = 2,
    AXIS_RESERVE_SPAWN = 4,

    // ************************************************************************

    Tank_At_First_Tunnel =
    {
        Name = "Tank_At_First_Tunnel",
        TriggerOnClass = { CLASS.VEHICLE, CLASS.VEHICLE_HVY },

        OnEnter = function( ent )
        {
            SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_First_Area.*" );
            SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Second_Area.*" );

            Util.MapDebugPrint( "Tank_At_First_Tunnel" );
        },

        OnExit = function( ent )
        {
            Util.MapDebugPrint( "Tank_In_Second_Area", true );
        },
    },

    Tank_At_Second_Tunnel =
    {
        Name = "Tank_At_Second_Tunnel",
        TriggerOnClass = { CLASS.VEHICLE, CLASS.VEHICLE_HVY },

        OnEnter = function( ent )
        {
            SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Second_Area.*" );
            SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Third_Area.*" );

            Util.MapDebugPrint( "Tank_At_Second_Tunnel" );
        },

        OnExit = function( ent )
        {
            Util.MapDebugPrint( "Tank_In_Third_Area", true );
        },
    },

    TankTriggerInfo =
    {
        Name = "TankTrigger",
        TriggerOnClass = { CLASS.VEHICLE, CLASS.VEHICLE_HVY },

        OnEnter = function( ent )
        {
            // If Axis still spawn at their Bunker, move to the other spawn
            // Only if no objective in the nature
            if ( Map.iDocumentsCount == 0 )
            {
                Util.ChangeSpawn( TEAM.AXIS, Map.AXIS_RESERVE_SPAWN );
            }

            // Wait until the Tank shoots and the blockwall flags update
            sleep ( 4 );

            SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_Third_Area.*" );
            SetAvailableMapGoals( TEAM.AXIS, true, "BUILD_Axis_Command_Post" ); // Here too

            // Manage CAMP and DEFEND spots for Axis in case some objective is already stolen
            Map.Documents_Returned_Or_Secured();

            SetAvailableMapGoals( TEAM.ALLIES, false, "ESCORT_Tank" );
            SetAvailableMapGoals( TEAM.ALLIES, true, {
                "FLAG_documents_.*",
                "PLANT_Axis_Library_Rear_Door",
            });

            Util.MapDebugPrint( "Axis_Wall_Destroyed" );
        },

        OnExit = function( ent )
        {
            Util.MapDebugPrint( GetEntName( ent ) + " exited the AABB trigger", true );
        },
    },

    // ************************************************************************

    Navigation =
    {
        transmitterladder =
        {
            navigate = function( _this )
            {
                _this.Bot.HoldButton( BTN.FORWARD, 1 );
                sleep( 1 );
            },
        },
    },

    // ************************************************************************

    /**
     * Handles Axis spawn if possible when an objective gets stolen.
     * Also enables CAMP spots around the Allied Transmitter for everyone.
     */
    Documents_Taken = function()
    {
        // If the Axis Bunker Spawn is still available, move there
        if ( !Map.isAxisGeneratorDestroyed )
        {
            Util.ChangeSpawn( TEAM.AXIS, Map.AXIS_BUNKER_SPAWN );
        }

        Util.EnableGoal( "CAMP_Allied_Transmitter.*" );

        SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_.*_Docs.*" );
    },

    /**
     * Upon returning or securing an objective, if no one is still in the nature,
     * Axis should move their spawn back to the Reserve.
     * Also disables the CAMP spots around the Allied Transmitter is needed,
     * and re-enables DEFEND spots for Axis.
     */
    Documents_Returned_Or_Secured = function()
    {
        if ( Map.iDocumentsCount == 0 )
        {
            Util.ChangeSpawn( TEAM.AXIS, Map.AXIS_RESERVE_SPAWN );

            Util.DisableGoal( "CAMP_Allied_Transmitter.*" );

            // DEFEND spots for Axis inside the Library
            if ( Map.areLowerDocumentsAvailable )
            {
                SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Lower_Docs.*" );
            }

            if ( Map.areUpperDocumentsAvailable )
            {
                SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_Upper_Docs.*" );
            }
        }
    },

    // ************************************************************************

    // *** TRIGGER CALLBACKS ***
    Alllied_Transmitter_Built = function( trigger )
    {
        Map.iAlliedTransmitterCount += 1;

        // Just exec the rest once, upon the fifth call in a row
        if ( Map.iAlliedTransmitterCount < 5 )
        {
            return;
        }

        // Reset the counter for the next time (if destroyed)
        Map.iAlliedTransmitterCount = 0;

        // Just upon the first time
        if ( !Map.isAlliedTransmitterSpawnAvailable )
        {
            // Important step, simply reset the available goals list
            Util.DisableGoal( ".*", true );

            SetAvailableMapGoals( TEAM.AXIS, true, {
                "BUILD_Axis_Library_Rear_Door",
                "DEFEND_First_Area.*",
                "PLANT_Alllied_Transmitter",
            });

            SetAvailableMapGoals( TEAM.ALLIES, true, {
                "BUILD_Alllied_Transmitter",
                "BUILD_Tank",
                "ESCORT_Tank",
                "MOUNT_Tank",
                "PLANT_Axis_Library_Rear_Door",
                "SNIPE_Allied_Road_Bottom_Right",
            });

            // Check if PLANT_Axis_Generator is still available (it moves Axis spawn back)
            if ( !Map.isAxisGeneratorDestroyed )
            {
                SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Axis_Generator" );
            }

            // Adjust Allied Transmitter priorities (critical)
            SetGoalPriority( "BUILD_Axis_Command_Post", 0.93 );     // So it is done
            SetGoalPriority( "BUILD_Alllied_Transmitter", 0.92 );   // Default is 0.90, 0.91 is for CAMP spots
            SetGoalPriority( "PLANT_Alllied_Transmitter", 0.92 );   // Same here, top priority

            // Because Allies are moved to a new spawn,
            // make the ones not in the Transmitter area selfkill
            foreach ( id and bot in BotTable )
            {
                if ( bot.GetTeam() == TEAM.ALLIES && bot.GetPosition().x < 1900 )
                {
                    bot.ExecCommand( "kill" );
                }
            }

            Util.MapDebugPrint( "Alllied_Transmitter_Built_For_The_First_Time", true );
        }

        // The Allied Transmitter Spawn is available
        // Also indicates that the Transmitter has been built at least once
        Map.isAlliedTransmitterSpawnAvailable = true;

        // Manage objective drop off here
        SetAvailableMapGoals( TEAM.ALLIES, false, "CAPPOINT_TempCampUntilTransmitterGetsAvailable" );
        SetAvailableMapGoals( TEAM.ALLIES, true, "CAPPOINT_Transmitter" );

        Util.MapDebugPrint( "Alllied_Transmitter_Built" );
    },

    Axis_Command_Post_Built = function( trigger )
    {
        // Its location is hardly reachable by Allies...

        Util.MapDebugPrint( "Axis_Command_Post_Built", true );
    },

    Axis_Library_Rear_Door_Built = function( trigger )
    {
        SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Axis_Library_Rear_Door" );

        Util.MapDebugPrint( "Axis_Library_Rear_Door_Built" );
    },

    Forward_Bunker_Doors_Built = function( trigger )
    {
        if ( !Map.isAxisBunkerWallDestroyed )
        {
            Util.DisableGoal( "ROUTE_GeneratorNode2" );

            SetAvailableMapGoals( TEAM.ALLIES, false, "PLANT_Axis_Generator" );
        }

        Util.DisableGoal( "ROUTE_GeneratorNode1" );

        SetAvailableMapGoals( TEAM.ALLIES, false, "ATTACK_Alpha.*" );

        Util.MapDebugPrint( "Forward_Bunker_Doors_Built" );
    },

    Tank_Built = function( trigger )
    {
        Util.MapDebugPrint( "Tank_Built", true );
    },

    // ************************************************************************

    Alllied_Transmitter_Planted = function( trigger )
    {
        Map.Alllied_Transmitter_Dyno += 1;

        Util.MapDebugPrint( "Alllied_Transmitter_Planted", true );
    },

    Axis_Bunker_Wall_Planted = function( trigger )
    {
        Map.Axis_Bunker_Wall_Dyno += 1;

        Util.MapDebugPrint( "Axis_Bunker_Wall_Planted", true );
    },

    Axis_Command_Post_Planted = function( trigger )
    {
        Map.Axis_Command_Post_Dyno += 1;

        Util.MapDebugPrint( "Axis_Command_Post_Planted", true );
    },

    Axis_Generator_Planted = function( trigger )
    {
        Map.Axis_Generator_Dyno += 1;

        Util.MapDebugPrint( "Axis_Generator_Planted", true );
    },

    Axis_Library_Rear_Door_Planted = function( trigger )
    {
        Map.Axis_Library_Rear_Door_Dyno += 1;

        Util.MapDebugPrint( "Axis_Library_Rear_Door_Planted", true );
    },

    Forward_Bunker_Doors_Planted = function( trigger )
    {
        Map.Forward_Bunker_Doors_Dyno += 1;

        Util.MapDebugPrint( "Forward_Bunker_Doors_Planted", true );
    },

    // ************************************************************************

    Alllied_Transmitter_Defused = function( trigger )
    {
        Map.Alllied_Transmitter_Dyno -= 1;

        Util.MapDebugPrint( "Alllied_Transmitter_Defused", true );
    },

    Axis_Bunker_Wall_Defused = function( trigger )
    {
        Map.Axis_Bunker_Wall_Dyno -= 1;

        Util.MapDebugPrint( "Axis_Bunker_Wall_Defused", true );
    },

    Axis_Command_Post_Defused = function( trigger )
    {
        Map.Axis_Command_Post_Dyno -= 1;

        Util.MapDebugPrint( "Axis_Command_Post_Defused", true );
    },

    Axis_Generator_Defused = function( trigger )
    {
        Map.Axis_Generator_Dyno -= 1;

        Util.MapDebugPrint( "Axis_Generator_Defused", true );
    },

    Axis_Library_Rear_Door_Defused = function( trigger )
    {
        Map.Axis_Library_Rear_Door_Dyno -= 1;

        Util.MapDebugPrint( "Axis_Library_Rear_Door_Defused", true );
    },

    Forward_Bunker_Doors_Defused = function( trigger )
    {
        Map.Forward_Bunker_Doors_Dyno -= 1;

        Util.MapDebugPrint( "Forward_Bunker_Doors_Defused", true );
    },

    // ************************************************************************

    Alllied_Transmitter_Destroyed = function( trigger )
    {
        Map.iAlliedTransmitterCount += 1;

        // Just exec the rest once, upon the fifth call in a row
        if ( Map.iAlliedTransmitterCount < 5 )
        {
            return;
        }

        // Reset the counter for the next time (if destroyed)
        Map.iAlliedTransmitterCount = 0;

        Map.Alllied_Transmitter_Dyno = 0;

        SetAvailableMapGoals( TEAM.ALLIES, false, "CAPPOINT_Transmitter" );
        SetAvailableMapGoals( TEAM.ALLIES, true, "CAPPOINT_TempCampUntilTransmitterGetsAvailable" );

        Util.MapDebugPrint( "Alllied_Transmitter_Destroyed", true );
    },

    Axis_Bunker_Wall_Destroyed = function( trigger )
    {
        Map.Axis_Bunker_Wall_Dyno = 0;
        Map.isAxisBunkerWallDestroyed = true;

        Util.EnableGoal( "ROUTE_AlliedWestLanderNode3" );

        // In case Allies focus on this
        SetAvailableMapGoals( TEAM.AXIS, true, "BUILD_Axis_Library_Rear_Door" );

        // If Allies still spawn at the Beach,
        // no matter which spawn Axis have at this moment
        if ( !isAlliedTransmitterSpawnAvailable )
        {
            SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_AxisBunkerWall.*" );
        }

        SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Alllied_Transmitter" );

        if ( !Map.isAxisGeneratorDestroyed )
        {
            SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Axis_Generator" );
        }

        Util.MapDebugPrint( "Axis_Bunker_Wall_Destroyed" );
    },

    Axis_Command_Post_Destroyed = function( trigger )
    {
        Map.Axis_Command_Post_Dyno = 0;

        SetAvailableMapGoals( TEAM.AXIS, true, "BUILD_Axis_Command_Post" );

        Util.MapDebugPrint( "Axis_Command_Post_Destroyed" );
    },

    Axis_Generator_Destroyed = function( trigger )
    {
        Map.Axis_Generator_Dyno = 0;
        Map.isAxisGeneratorDestroyed = true;

        // Axis are moved to Axis Reserve Spawn
        // But Allies keep their spawn at the beach...

        Util.EnableGoal( "AMMOCAB_.*" );
        Util.EnableGoal( "HEALTHCAB_.*" );

        // The only moment Axis can build their CP,
        // because it is at the bottom of the map...
        // But don't let Allies waste efforts trying to reach it
        SetAvailableMapGoals( TEAM.AXIS, true, {
            "BUILD_Axis_Command_Post",
            "MOBILEMG42_.*",
            "SNIPE_Axis_.*",
        });
        SetAvailableMapGoals( TEAM.AXIS, false, {
            "MOUNTMG42_595",
            "SNIPE_Axis_Bunker",
        });

        // TODO: Cleanup
        SetAvailableMapGoals( TEAM.ALLIES, true, {
            "BUILD_Alllied_Transmitter",
            "BUILD_Tank",
            "MOVER_tank",
            "PLANT_Axis_Library_Rear_Door",
        });

        Util.MapDebugPrint( "Axis_Generator_Destroyed" );
    },

    Axis_Library_Rear_Door_Destroyed = function( trigger )
    {
        Map.Axis_Library_Rear_Door_Dyno = 0;

        SetAvailableMapGoals( TEAM.ALLIES, false, "PLANT_Axis_Library_Rear_Door" );

        Util.MapDebugPrint( "Axis_Library_Rear_Door_Destroyed" );
    },

    Forward_Bunker_Doors_Destroyed = function( trigger )
    {
        Map.Forward_Bunker_Doors_Dyno = 0;

        // Let the blockwall flags update
        sleep( 2 );

        Util.EnableGoal( "ROUTE_GeneratorNode.*" );

        if ( !Map.isAlliedTransmitterSpawnAvailable )
        {
            SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_Alpha.*" );
        }

        if ( !Map.isAxisGeneratorDestroyed )
        {
            SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_Axis_Generator" );
        }

        Util.MapDebugPrint( "Forward_Bunker_Doors_Destroyed" );
    },

    Tank_Destroyed = function( trigger )
    {
        SetAvailableMapGoals( TEAM.ALLIES, true, "BUILD_Tank" );

        Util.MapDebugPrint( "Tank_Destroyed" );
    },

    // ************************************************************************

    documents_1_Taken = function( trigger )
    {
        Map.areLowerDocumentsAvailable = false;
        Map.iDocumentsCount += 1;

        Map.Documents_Taken();

        Util.MapDebugPrint( "documents_1_Taken" );
    },

    documents_2_Taken = function( trigger )
    {
        Map.areUpperDocumentsAvailable = false;
        Map.iDocumentsCount += 1;

        Map.Documents_Taken();

        Util.MapDebugPrint( "documents_2_Taken" );
    },

    documents_1_Returned = function( trigger )
    {
        Map.areLowerDocumentsAvailable = true;
        Map.iDocumentsCount -= 1;

        Map.Documents_Returned_Or_Secured();

        Util.MapDebugPrint( "documents_1_Returned" );
    },

    documents_2_Returned = function( trigger )
    {
        Map.areUpperDocumentsAvailable = true;
        Map.iDocumentsCount -= 1;

        Map.Documents_Returned_Or_Secured();

        Util.MapDebugPrint( "documents_2_Returned" );
    },

    documents_1_Secured = function( trigger )
    {
        Map.iDocumentsCount -= 1;

        Map.Documents_Returned_Or_Secured();

        Util.MapDebugPrint( "documents_1_Secured" );
    },

    documents_2_Secured = function( trigger )
    {
        Map.iDocumentsCount -= 1;

        Map.Documents_Returned_Or_Secured();

        // Disable Axis Library Rear Door goals
        SetAvailableMapGoals( TEAM.AXIS, false, "BUILD_Axis_Library_Rear_Door" );
        SetAvailableMapGoals( TEAM.ALLIES, false, "PLANT_Axis_Library_Rear_Door" );

        Util.MapDebugPrint( "documents_2_Secured" );
    },
};

global OnMapLoad = function()
{
    // *** TRIGGERS ***
    OnTrigger( "Allied Transmitter constructed. Charge speed increased!", Map.Alllied_Transmitter_Built );
    OnTrigger( "Axis Command Post constructed. Charge speed increased!", Map.Axis_Command_Post_Built );

    // TODO: Yeah, the mapper messed with copy/paste... To inspect
    //OnTrigger( "the Forward Bunker Doors have been constructed.", Map.Axis_Library_Rear_Door_Built );
    OnTrigger( "the Forward Bunker Doors have been constructed.", Map.Forward_Bunker_Doors_Built );

    OnTrigger( "The Tank has been repaired!", Map.Tank_Built );

    OnTrigger( "Planted at the Alllied Transmitter.", Map.Alllied_Transmitter_Planted );
    OnTrigger( "Planted at The Axis Bunker Wall.", Map.Axis_Bunker_Wall_Planted );
    OnTrigger( "Planted at the Axis Command Post.", Map.Axis_Command_Post_Planted );
    OnTrigger( "Planted at The Axis Generator.", Map.Axis_Generator_Planted );
    OnTrigger( "Planted at The Axis Library Rear Door.", Map.Axis_Library_Rear_Door_Planted );
    OnTrigger( "Planted at The Forward Bunker Doors.", Map.Forward_Bunker_Doors_Planted );

    OnTrigger( "Defused at the Alllied Transmitter.", Map.Alllied_Transmitter_Defused );
    OnTrigger( "Defused at The Axis Bunker Wall.", Map.Axis_Bunker_Wall_Defused );
    OnTrigger( "Defused at the Axis Command Post.", Map.Axis_Command_Post_Defused );
    OnTrigger( "Defused at The Axis Generator.", Map.Axis_Generator_Defused );
    OnTrigger( "Defused at The Axis Library Rear Door.", Map.Axis_Library_Rear_Door_Defused );
    OnTrigger( "Defused at The Forward Bunker Doors.", Map.Forward_Bunker_Doors_Defused );

    OnTrigger( "Axis team has destroyed the Allied Transmitter!", Map.Alllied_Transmitter_Destroyed );
    OnTrigger( "The Axis Bunker Wall has been destroyed.", Map.Axis_Bunker_Wall_Destroyed );
    OnTrigger( "Allied team has destroyed the Axis Command Post!", Map.Axis_Command_Post_Destroyed );
    OnTrigger( "The Axis Generator has been destroyed.", Map.Axis_Generator_Destroyed );
    OnTrigger( "The Axis Library Rear Door has been destroyed.", Map.Axis_Library_Rear_Door_Destroyed );
    OnTrigger( "the Forward Bunker Doors have been destroyed.", Map.Forward_Bunker_Doors_Destroyed );
    OnTrigger( "The Tank has been damaged!", Map.Tank_Destroyed );

    OnTrigger( "Allies have stolen the documents set 1!", Map.documents_1_Taken );
    OnTrigger( "Allies have stolen the documents set 2!", Map.documents_2_Taken );
    OnTrigger( "Documents set 1 returned!", Map.documents_1_Returned );
    OnTrigger( "Documents set 2 returned!", Map.documents_2_Returned );
    OnTrigger( "Allies have transmitted the documents set 1!", Map.documents_1_Secured );
    OnTrigger( "Allies have transmitted the documents set 2!", Map.documents_2_Secured );

    // *** CLEAR ALL GOALS FOR BOTH TEAMS ***
    Util.DisableGoal( ".*", true ); // All but routes
    Util.DisableGoal( "ROUTE_AlliedWestLanderNode3" );

    // *** AXIS GOALS ***
    SetAvailableMapGoals( TEAM.AXIS, true, {
        "BUILD_Forward_Bunker_Doors",
        "DEFEND_Alpha.*",
        "MOUNTMG42_595",
        "REPAIRMG42_595",
        "SNIPE_Axis_Ramp",
    });

    // *** ALLIED GOALS ***
    SetAvailableMapGoals( TEAM.ALLIES, true, {
        "ATTACK_Alpha.*",
        "PLANT_Axis_Bunker_Wall",
        "PLANT_Axis_Generator",
    });

    // *** GOAL PROPERTIES ***
    OnTriggerRegion( AABB( 1535.888, -2560.875, 321.125, 1928.433, -2303.135, 395.125 ), Map.Tank_At_First_Tunnel);
    OnTriggerRegion( AABB( -768.937, -2688.875, 313.125, -248.788, -2431.136, 387.125 ), Map.Tank_At_Second_Tunnel);
    OnTriggerRegion( AABB( -1951, -2564, 344, -1905, -2306, 408 ), Map.TankTriggerInfo );

    SetGoalPriority( "CAMP_Allied_Transmitter.*", 0.91 );

    Util.AddUsePoint( "PLANT_Alllied_Transmitter", Vec3( 2890, -50, 505 ) );
    Util.AddUsePoint( "PLANT_Axis_Generator", Vec3( 1370, -834, 648 ) );
    Util.AddUsePoint( "PLANT_Axis_Library_Rear_Door", Vec3( -3310, -1750, 675 ) );
    Util.AddUsePoint( "PLANT_Forward_Bunker_Doors", Vec3( 400, -365, 585 ) );

    Util.MapDebugPrint( "Omni-Bot 0.8x map script for 1944 Overlord by Mateos executed." );
};

global OnBotJoin = function( bot )
{
    bot.TargetBreakableDist = 90.0;
};

global InitializeRoutes = function()
{
    MapRoutes =
    {
        PLANT_Axis_Generator =
        {
            ROUTE_AlliedWestLanderSpawn =
            {
                ROUTE_AlliedWestLanderNode1 =
                {
                    ROUTE_AlliedWestLanderNode2 =
                    {
                        ROUTE_AlliedWestLanderNode3 =
                        {
                            ROUTE_GeneratorNode2 = {},
                        },

                        ROUTE_GeneratorNode1 =
                        {
                            ROUTE_GeneratorNode2 = {},
                        },
                    },
                },

                ROUTE_GeneratorNode1 =
                {
                    ROUTE_GeneratorNode2 = {},
                },
            },

            ROUTE_AlliedIsolatedBeachSpawn =
            {
                ROUTE_AlliedWestLanderNode1 =
                {
                    ROUTE_AlliedWestLanderNode2 =
                    {
                        ROUTE_AlliedWestLanderNode3 =
                        {
                            ROUTE_GeneratorNode2 = {},
                        },

                        ROUTE_GeneratorNode1 =
                        {
                            ROUTE_GeneratorNode2 = {},
                        },
                    },
                },

                ROUTE_GeneratorNode1 =
                {
                    ROUTE_GeneratorNode2 = {},
                },
            },
        },

        PLANT_Axis_Bunker_Wall =
        {
        },
        BUILD_Alllied_Transmitter =
        {
        },
        PLANT_Alllied_Transmitter =
        {
        },
        BUILD_Forward_Bunker_Doors =
        {
        },
        PLANT_Forward_Bunker_Doors =
        {
        },
        BUILD_Tank =
        {
        },
        FLAG_documents_1 =
        {
        },
        FLAG_documents_2 =
        {
        },
        BUILD_Axis_Library_Rear_Door =
        {
        },
        PLANT_Axis_Library_Rear_Door =
        {
        },
        BUILD_Axis_Command_Post =
        {
        },
        PLANT_Axis_Command_Post =
        {
        },
    };

    // Copy some routes
    MapRoutes.ATTACK_Alpha1 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha2 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha3 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha4 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha5 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha1 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha7 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha8 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha9 = MapRoutes.PLANT_Axis_Generator;
    MapRoutes.ATTACK_Alpha10 = MapRoutes.PLANT_Axis_Generator;

    Util.Routes( MapRoutes );
};
