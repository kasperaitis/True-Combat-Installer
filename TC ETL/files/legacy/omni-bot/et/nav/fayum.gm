//==========================================================================================
//
//	fayum.gm
//
//	Who       	When		What
//------------------------------------------------------------------------------------------
//	^1[UJE]^3Niek	27 November 2022	Initial Script
//
//==========================================================================================
//

global Map =
{
	Debug = 0, // please set to zero before distributing your script

	Bridge_Built = function( trigger )
	{
		Util.MapDebugPrint( "Bridge_Built" );
	},

	Old_City_MG_Nest_Built = function( trigger )
	{
		Util.MapDebugPrint( "Old_City_MG_Nest_Built" );
	},

	Stairs_Built = function( trigger )
	{
		Util.MapDebugPrint( "Stairs_Built" );
	},

	Bridge_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Bridge_Destroyed" );
	},

	Gate_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Gate_Destroyed" );
	},

	Generator_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Generator_Destroyed" );
	},

	Old_City_MG_Nest_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Old_City_MG_Nest_Destroyed" );
	},

	Stairs_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Stairs_Destroyed" );
	},

	fayumflag_Axis_Captured = function( trigger )
	{
		Util.MapDebugPrint( "fayumflag_Axis_Captured" );
	},

	fayumflag_Allies_Captured = function( trigger )
	{
		Util.MapDebugPrint( "fayumflag_Allies_Captured" );
	},

};

global OnMapLoad = function()
{
	// Register callback functions
	OnTrigger( "MISSING_STRING", Map.Bridge_Built );
	OnTrigger( "MISSING_STRING", Map.Old_City_MG_Nest_Built );
	OnTrigger( "MISSING_STRING", Map.Stairs_Built );
	OnTrigger( "MISSING_STRING", Map.Bridge_Destroyed );
	OnTrigger( "MISSING_STRING", Map.Gate_Destroyed );
	OnTrigger( "MISSING_STRING", Map.Generator_Destroyed );
	OnTrigger( "MISSING_STRING", Map.Old_City_MG_Nest_Destroyed );
	OnTrigger( "MISSING_STRING", Map.Stairs_Destroyed );
	OnTrigger( "MISSING_STRING", Map.fayumflag_Axis_Captured );
	OnTrigger( "MISSING_STRING", Map.fayumflag_Allies_Captured );

	//~Util.DisableGoal( ".*", true ); // all but routes
	//~SetAvailableMapGoals( TEAM.AXIS, true, "ATTACK_.*" );
	//~SetAvailableMapGoals( TEAM.ALLIES, true, "ATTACK_.*" );

	// Max users per goal
	//Util.SetMaxUsers( 1, "MOUNTMG42_.*" );

	// Camp times
	//SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=15, MaxCampTime=90} );


	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	// Uncomment for shootable breakables
	//~bot.TargetBreakableDist = 90.0;
	// Only set MaxViewDistance on maps with limited sight (e.g. fog)
	//~bot.MaxViewDistance = 2400;
};

global InitializeRoutes = function()
{
	MapRoutes =
	{
		BUILD_Stairs =
		{
		},
		PLANT_Stairs =
		{
		},
		PLANT_Gate =
		{
		},
		CHECKPOINT_fayumflag =
		{
		},
		PLANT_Generator =
		{
		},
		BUILD_Bridge =
		{
		},
		PLANT_Bridge =
		{
		},
		BUILD_Old_City_MG_Nest =
		{
		},
		PLANT_Old_City_MG_Nest =
		{
		},
	};
	Util.Routes(MapRoutes);
};
