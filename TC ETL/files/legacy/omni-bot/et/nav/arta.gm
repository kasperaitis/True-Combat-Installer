//==========================================================================================
//
//	arta.gm
//
//	Who	When		What
//------------------------------------------------------------------------------------------
//	Sage	16 July 2017	Initial Script
//	Sage	14 January 2018	More Script
//	palota	14 April 2018	bugs fixed, script cleanup, barricade
//
//==========================================================================================
//
//
global Map =
{
	Debug = 0, // please set to zero before distributing your script

	Crates_Delivered = 0,
	Bridge_passed = 0,
	Foot_Bridge_Built = 0,
	barricadeBuilt = 0,
	prototypesDestroyed = 0,

	DispenseHealthTime = 1.0,
	DispenseAmmoTime = 1.0,
	DefendingTeam = TEAM.AXIS,

	Bridge_bombed = function( trigger )
	{
		Util.MapDebugPrint( "Bridge_bombed" );
	},

	Assault_Ramp_Built = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_cp_hill" );

		Util.MapDebugPrint( "Assault_Ramp_Built" );
	},

	Foot_Bridge_Built = function( trigger )
	{
		Map.Foot_Bridge_Built = 1;

		if ( Map.Crates_Delivered == 1 && Map.Bridge_passed == 0 )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_al_overbridge.*" );
		}

		Util.MapDebugPrint( "Foot_Bridge_Built" );
	},

	Assault_Ramp_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_cp_hill" );

		Util.MapDebugPrint( "Assault_Ramp_Destroyed" );
	},

	Foot_Bridge_Destroyed = function( trigger )
	{
		Map.Foot_Bridge_Built = 0;

		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_al_overbridge.*" );

		Util.MapDebugPrint( "Foot_Bridge_Destroyed" );
	},

	Jet_Engine_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_al_engine.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_ax_engine.*" );

		Util.MapDebugPrint( "Jet_Engine_Destroyed" );
	},

	Plane_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Plane_Destroyed" );
	},

	prototypes_Destroyed = function( trigger )
	{
		Map.prototypesDestroyed = 1;
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"DEFEND_ax_documents.*",
			"DEFEND_ax_cp.*",
		});

		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"DEFEND_al_documents.*",
			"DEFEND_al_cp.*",
			"FLAG_secret_documents",
			"CAPPOINT_cp",
			"BUILD_cp",
			"BUILD_Assault_Ramp",
		});

		SetAvailableMapGoals( TEAM.ALLIES, false, "PLANT_barricade" );

		SetAvailableMapGoals( TEAM.AXIS, false, {
			"BUILD_barricade",
			"DEFEND_barricade.*",
			"DEFEND_ax_tunnel.*",
		});

		Util.MapDebugPrint( "prototypes_Destroyed" );
	},


	Bridge_Built1 = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, true, "DYNAMITE_bridge" );

		Util.MapDebugPrint( "Bridge_Built1" );
	},

	Bridge_Destroyed1 = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, false, "DYNAMITE_bridge" );

		Util.MapDebugPrint( "Bridge_Destroyed1" );
	},

	patch_passed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, false, "DYNAMITE_bridge" );
		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"BUILD_bridge",
			"AIRSTRIKE_allied_bridge",
		});
		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"CALLARTILLERY_allied_bridge",
			"ARTILLERY_S_allied_bridge",
		});

		Util.MapDebugPrint( "patch_passed" );
	},

	bridge_passed = function( trigger )
	{
		Map.Bridge_passed = 1;

		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"CALLARTILLERY_allied_bridge",
			"ARTILLERY_S_allied_bridge",
			"DEFEND_al_overbridge.*",
			"DEFEND_al_bridge.*",
			"BUILD_Foot_Bridge",
		});

		SetAvailableMapGoals( TEAM.AXIS, false, {
			"AIRSTRIKE_bridge",
			"PLANT_Foot_Bridge",
		});

		Util.MapDebugPrint( "bridge_passed" );
	},

	Destroy_Tiger = function( trigger )
	{
		sleep(2);
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_ax_bridge.*" );
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"DEFEND_ax_tiger.*",
			"AIRSTRIKE_tiger",
		});

		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"DEFEND_al_tiger.*",
			"PLANT_Tiger",
			"BUILD_Assault_Ramp",
		});
		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"ESCORT_tank",
			"BUILD_M8_Greyhound",
		});

		Util.MapDebugPrint( "Destroy_Tiger" );
	},

	Tiger_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, false, {
			"DEFEND_ax_tiger.*",
			"AIRSTRIKE_tiger",
		});
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"DEFEND_ax_tunnel.*",
			"DEFEND_ax_plane.*",
			"DEFEND_ax_engine.*",
			"CALLARTILLERY_after_tiger",
			"ARTILLERY_S_before_gate",
			"DEFEND_ax_inlet.*",
		});

		Util.SetMaxUsers( 1, "DEFEND_ax_inlet.*" );

		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"DEFEND_al_tiger.*",
			"BUILD_Assault_Ramp",
		});
		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"PLANT_Air_Inlet",
			"ESCORT_tank",
			"BUILD_M8_Greyhound",
		});

		Util.MapDebugPrint( "Tiger_Destroyed" );
	},

	Gate_Destroyed = function( trigger )
	{
		sleep(2);
		Util.DisableGoal("AMMOCAB_first_ammocabinet_1");
		Util.DisableGoal("HEALTHCAB_first_healthcabinet_1");
		Util.EnableGoal("AMMOCAB_first_ammocabinet");
		Util.EnableGoal("HEALTHCAB_first_healthcabinet");

		SetAvailableMapGoals( TEAM.AXIS, false, {
			"CALLARTILLERY_after_tiger",
			"ARTILLERY_S_before_gate",
		});
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"BUILD_barricade",
			"DEFEND_barricade.*",
		});

		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"DEFEND_al_tiger.*",
			"ESCORT_tank",
			"BUILD_M8_Greyhound",
		});
		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"PLANT_Jet_Engine",
			"PLANT_Plane",
			"DEFEND_al_plane.*",
			"DEFEND_al_engine.*",
		});

		Util.MapDebugPrint( "Gate_Destroyed" );
	},

	Air_Inlet_Destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_ax_inlet.*" );
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_air_vent" );

		Util.MapDebugPrint( "Air_Inlet_Destroyed" );
	},

	crate1_obj_Taken = function( trigger )
	{
		Util.MapDebugPrint( "crate1_obj_Taken" );
	},

	crate2_obj_Taken = function( trigger )
	{
		Util.MapDebugPrint( "crate2_obj_Taken" );
	},

	secret_documents_Taken = function( trigger )
	{
		Util.MapDebugPrint( "secret_documents_Taken" );
	},

	crate1_obj_Returned = function( trigger )
	{
		Util.MapDebugPrint( "crate1_obj_Returned" );
	},

	crate2_obj_Returned = function( trigger )
	{
		Util.MapDebugPrint( "crate2_obj_Returned" );
	},

	secret_documents_Returned = function( trigger )
	{
		Util.MapDebugPrint( "secret_documents_Returned" );
	},

	crate1_obj_Secured = function( trigger )
	{
		Util.MapDebugPrint( "crate1_obj_Secured" );
	},

	crate2_obj_Secured = function( trigger )
	{
		Util.MapDebugPrint( "crate2_obj_Secured" );
	},

	cp_built = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"PLANT_cp",
			"DYNAMITE_cp",
		});

		Util.MapDebugPrint( "cp_built" );
	},

	cp_destroyed = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, false, {
			"PLANT_cp",
			"DYNAMITE_cp",
		});

		Util.MapDebugPrint( "cp_destroyed" );
	},

	Barricade_Built = function( trigger )
	{
		Map.barricadeBuilt = 1;
		SetAvailableMapGoals( TEAM.AXIS, false, {
			"BUILD_barricade",
			"DEFEND_barricade.*",
		});
		if (GetGameTimeLeft()>300 && !Map.prototypesDestroyed){
			SetAvailableMapGoals( TEAM.ALLIES, true, "PLANT_barricade" );
		}
		Util.MapDebugPrint( "Barricade_Built" );
	},

	Barricade_Destroyed = function( trigger )
	{
		Map.barricadeBuilt = 0;
		if (!Map.prototypesDestroyed) {
			SetAvailableMapGoals( TEAM.AXIS, true, {
				"BUILD_barricade",
				"DEFEND_barricade.*",
			});
		}
		SetAvailableMapGoals( TEAM.ALLIES, false, "PLANT_barricade" );
		Util.MapDebugPrint( "Barricade_Destroyed" );
	},

	both_crates_Secured = function( trigger )
	{
		Map.Crates_Delivered = 1;

		//Note that the bridge constructible should be available before allowing goal

		SetAvailableMapGoals( TEAM.ALLIES, false, {
			"PLANT_Generator",
			"SWITCH_turbine",
			"FLAG_crate._obj",
			"CAPPOINT_bridge",
		});
		SetAvailableMapGoals( TEAM.ALLIES, true, {
			"BUILD_bridge",
			"ESCORT_tank",
			"BUILD_M8_Greyhound",
			"AIRSTRIKE_allied_bridge",
		});

		SetAvailableMapGoals( TEAM.AXIS, false, {
			"BUILD_Generator",
			"SWITCH_turbine",
			"DEFEND_ax_dam.*",
			"CALLARTILLERY_bridge",
			"MOBILEMG42_bridge",
			"SNIPE_bridge",
		});
		SetAvailableMapGoals( TEAM.AXIS, true, "AIRSTRIKE_bridge" );

		SetGoalPriority( "ESCORT_tank", 0.79, TEAM.ALLIES );
		SetGoalPriority( "BUILD_M8_Greyhound", 0.90, TEAM.ALLIES );

		if ( Map.Foot_Bridge_Built == 1 )
		{
			SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_al_overbridge.*" );
		}

		Util.MapDebugPrint( "both_crates_Secured" );
	},

	turbines_on = function( trigger )
	{
		Wp.SetWaypointFlag("water_jump","closed",true);
		Wp.SetWaypointFlag("dam","axis",false);

		if ( Map.Crates_Delivered == 0 )
		{
			SetAvailableMapGoals( TEAM.AXIS, false, "SWITCH_turbine" );
			SetAvailableMapGoals( TEAM.ALLIES, true, {
				"SWITCH_turbine",
				"ROUTE_water",
			});
		}

		Util.MapDebugPrint( "turbines_on" );
	},

	turbines_off = function( trigger )
	{
		Wp.SetWaypointFlag("water_jump","closed",false);
		Wp.SetWaypointFlag("dam","axis",true);

		if ( Map.Crates_Delivered == 0 )
		{
			SetAvailableMapGoals( TEAM.AXIS, true, "SWITCH_turbine" );
			SetAvailableMapGoals( TEAM.ALLIES, false, {
				"SWITCH_turbine",
				"ROUTE_water",
			});
		}

		Util.MapDebugPrint( "turbines_off" );
	},

	Generator_Disabled = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, true, "ROUTE_dam_side_door" );

		Util.MapDebugPrint( "Generator_Disabled" );
	},

	Generator_repaired = function( trigger )
	{
		SetAvailableMapGoals( TEAM.ALLIES, false, "ROUTE_dam_side_door" );

		Util.MapDebugPrint( "Generator_repaired" );
	},

	tank_at_bridge = function( trigger )
	{
		if ( Map.Crates_Delivered == 0 )
		{
			SetGoalPriority( "ESCORT_tank", 0.5, TEAM.ALLIES );
			SetGoalPriority( "BUILD_M8_Greyhound", 0.51, TEAM.ALLIES );
		}

		Util.MapDebugPrint( "tank_at_bridge" );
	},


	vehicle_at_location = function( trigger )
	{
		switch(Map.VehicleLocation)
		{
			case 1:
			{
				Map.tank_at_bridge();
			}
		}
		Util.MapDebugPrint("vehicle at location " + Map.VehicleLocation, true);
	},

};

global OnMapLoad = function()
{
	OnTrigger( "The Bridge has been destroyed!", Map.Bridge_bombed );
	OnTrigger( "The Allied Assault Ramp has been constructed.", Map.Assault_Ramp_Built );
	OnTrigger( "Allied team has constructed the Foot Bridge!", Map.Foot_Bridge_Built );
	OnTrigger( "Allied team has prepared the Bridge Patch!", Map.Bridge_Built1 );
	OnTrigger( "Axis team has destroyed the Bridge Patch!", Map.Bridge_Destroyed1 );
	OnTrigger( "Allied team has destroyed the Air Inlet!", Map.Air_Inlet_Destroyed );
	OnTrigger( "Axis have destroyed the Allied Assault Ramp.", Map.Assault_Ramp_Destroyed );
	OnTrigger( "Axis team has destroyed the Foot Bridge!", Map.Foot_Bridge_Destroyed );
	OnTrigger( "Allied team has destroyed the Jet Engine Prototype!", Map.Jet_Engine_Destroyed );
	OnTrigger( "Allied team has destroyed the Plane Prototype!", Map.Plane_Destroyed );
	OnTrigger( "The Allied Command Post kit has been delivered!", Map.prototypes_Destroyed );
	OnTrigger( "Allies have crossed the Bridge Patch!", Map.patch_passed );
	OnTrigger( "Allies have crossed the Bridge!", Map.bridge_passed );
	OnTrigger( "^1Allied Objective: ^3Destroy the enemy Tiger!", Map.Destroy_Tiger );
	OnTrigger( "The Tiger has been damaged!", Map.Tiger_Destroyed );
	OnTrigger( "Allies have breached the Gate!", Map.Gate_Destroyed );
	//OnTrigger( "MISSING_STRING", Map.secret_documents_Taken );
	//OnTrigger( "MISSING_STRING", Map.secret_documents_Returned );
	OnTrigger( "Bridge patch is ready to be constructed!", Map.both_crates_Secured );
	OnTrigger( "Allied Command Post constructed. Charge speed increased!", Map.cp_built );
	OnTrigger( "Axis team has destroyed the Allied Command Post!", Map.cp_destroyed );
	OnTrigger( "tank at location", Map.vehicle_at_location );
	OnTrigger( "Dam Turbines turned ^1ON^w!", Map.turbines_on );
	OnTrigger( "Dam Turbines turned ^1OFF^w!", Map.turbines_off );
	OnTrigger( "The Door Control power has been cut!", Map.Generator_Disabled );
	OnTrigger( "The Door Control power has been recovered!", Map.Generator_repaired );
	OnTrigger( "Barricade has been constructed.", Map.Barricade_Built );
	OnTrigger( "Barricade has been destroyed.", Map.Barricade_Destroyed );

	Util.DisableGoal( ".*", true );
	Util.EnableGoal("AMMOCAB_first_ammocabinet_1");
	Util.EnableGoal("HEALTHCAB_first_healthcabinet_1");

	SetAvailableMapGoals( TEAM.AXIS, true, {
		"MOBILEMG42_bridge",
		"BUILD_Generator",
		"PLANT_Assault_Ramp",
		"PLANT_Foot_Bridge",
		"CALLARTILLERY_bridge",
		"ARTILLERY_S_bridge.*",
		"SNIPE_bridge",
		"DEFEND_ax_bridge.*",
		"DEFEND_ax_dam.*",
	});

	SetAvailableMapGoals( TEAM.ALLIES, true, {
		"CAPPOINT_bridge",
		"BUILD_Foot_Bridge",
		"BUILD_M8_Greyhound",
		"PLANT_Generator",
		"FLAG_crate._obj",
		"ESCORT_tank",
		"SWITCH_turbine",
		"DEFEND_al_bridge.*",
	});

	SetAvailableMapGoals( TEAM.ALLIES, false, {
		"ROUTE_water",
		"ROUTE_dam_side_door",
		"ROUTE_air_vent",
	});

	RegionTrigger.Create(AABB(4413.860,1019.973,304.065,4728.118,1349.295,419.125), "VehicleTrigger", "bridge");

	Util.AddUsePoint( "PLANT_Tiger", { Vec3(-1368, 1359, 624), Vec3(-1450, 1488, 638), Vec3(-1585, 1462, 640) });
	Util.AddUsePoint( "PLANT_Plane", { Vec3(-926, -2602, 376), Vec3(-1065, -2370, 376), Vec3(-1066, -2452, 376) });
	Util.AddUsePoint( "PLANT_Jet_Engine", { Vec3(-1917, -2410, 390), Vec3(-2019, -2411, 388), Vec3(-1858, -2369, 376) });
	Util.AddUsePoint( "PLANT_Air_Inlet", { Vec3(-1075, -673, 604), Vec3(-1091, -926, 588) });
	Util.SetGoalPosition( 30, 2382, 611, "PLANT_Assault_Ramp" );

	Util.SetMaxUsersInProgress( 1, "MOUNTMG42_.*" );
	Util.SetMaxUsers( 1, "REPAIRMG42_.*" );
	Util.SetMaxUsers( 1, "BUILD_Foot_Bridge" );
	Util.SetMaxUsers( 1, "PLANT_Foot_Bridge" );
	Util.SetMaxUsers( 1, "BUILD_barricade" );
	Util.SetMaxUsers( 1, "PLANT_barricade" );
	Util.SetMaxUsersInUse( 1, "SWITCH_turbine" );
	Util.SetMaxUsersInProgress( 2, "SWITCH_turbine" );
	Util.SetMaxUsersInUse( 2, "ESCORT_tank" );
	Util.SetMaxUsersInProgress( 3, "ESCORT_tank" );

	SetGoalPriority( "PLANT_Foot_Bridge", 0.51, TEAM.AXIS );
	SetGoalPriority( "BUILD_Foot_Bridge", 0.51, TEAM.ALLIES );
	SetGoalPriority( "BUILD_barricade", 0.5, TEAM.AXIS );
	SetGoalPriority( "SWITCH_turbine", 0.8, TEAM.ALLIES );
	SetGoalPriority( "AIRSTRIKE.*", 0.51, TEAM.AXIS );
	SetGoalPriority( "AIRSTRIKE.*", 0.51, TEAM.ALLIES );
	SetGoalPriority( "CALLARTILLERY.*", 0.7, TEAM.ALLIES );
	SetGoalPriority( "SNIPE.*", 0.7, TEAM.ALLIES );
	SetGoalPriority( "DYNAMITE_bridge", 0.81, TEAM.ALLIES );

	Wp.SetWaypointFlag("water_jump","closed",true);
	Wp.SetWaypointFlag("dam","axis",false);

	//Util.SetGoalRange( "BUILD_Tunnel_Door", 3000);
	//Util.SetGoalRange( "PLANT_Tunnel_Door", 3000);
	//Util.SetGoalRange( ".*CAB_.*", 3000);

	// Camp times
	SetMapGoalProperties( "MOUNTMG42_.*", {MinCampTime=60, MaxCampTime=150} );
	SetMapGoalProperties( "SNIPE_.*", {MinCampTime=60, MaxCampTime=150} );
	SetMapGoalProperties( "MOBILEMG42_.*", {MinCampTime=40, MaxCampTime=70} );

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
};

global InitializeRoutes = function()
{
	MapRoutes =
	{
		FLAG_crate1_obj =
		{
			ROUTE_al_1st_spawn =
			{
				ROUTE_dam_side_door = {},
				ROUTE_dam_mountain = {},
			},
		},
		CAPPOINT_bridge =
		{
			ROUTE_crates =
			{
				ROUTE_dam_side_door =
				{
				Weight = 3,
					ROUTE_house_back =
					{
						ROUTE_house_back2 = {},
					},
					ROUTE_house_front = {},
				},
				ROUTE_water = {},
			},

		},
		BUILD_bridge =
		{
			ROUTE_al_1st_spawn =
			{
				ROUTE_road_right = {},
				ROUTE_road_left = {},
				ROUTE_house_front = {},
			},
		},
		PLANT_Tiger =
		{
			ROUTE_al_2nd_spawn =
			{
				ROUTE_cp_hill = {},
				ROUTE_road_gate = {},
			},
		},
		PLANT_Jet_Engine =
		{
			ROUTE_al_2nd_spawn =
			{
				ROUTE_main_gate =
				{
					Weight = 2,
					ROUTE_main_gate_hall = { Weight = 2, },
					ROUTE_main_gate_side = {},
					ROUTE_main_gate_stairs = {},
				},
				ROUTE_air_vent = {},
			},
		},
		FLAG_secret_documents =
		{
			ROUTE_al_2nd_spawn =
			{
				ROUTE_main_gate =
				{
					ROUTE_main_gate_hall = {},
					ROUTE_main_gate_stairs = {},
				},
				ROUTE_air_vent = {},
			},
		},
		CAPPOINT_cp =
		{
			ROUTE_documents =
			{
				ROUTE_air_vent = {},
				ROUTE_main_gate_hall =
				{
					ROUTE_main_gate_stairs =
					{
						ROUTE_air_vent = {},
					},
					ROUTE_main_gate =
					{
						ROUTE_cp_hill = {},
						ROUTE_road_gate = {},
					},
				},
			},
		},

		DYNAMITE_bridge =
		{
			ROUTE_ax_1st_spawn =
			{
				ROUTE_axis_road = {},
				ROUTE_axis_road_side = {},
				ROUTE_axis_house_side = {},
			},
		},
	};

	MapRoutes["DEFEND_ax_tiger.*"] =
	{
		ROUTE_ax_2nd_spawn =
		{
			ROUTE_axis_hill_right = {},
			ROUTE_axis_hill_left = {},
			ROUTE_axis_mountain = {},
		},
	};
	MapRoutes["DEFEND_ax_plane.*"] =
	{
		ROUTE_axis_plane = {},
		ROUTE_axis_engine = {},
		ROUTE_axis_tunnel = {},
	};
	MapRoutes["DEFEND_ax_engine.*"] =
	{
		ROUTE_axis_plane = {},
		ROUTE_axis_engine = {},
	};
	MapRoutes["DEFEND_ax_documents.*"] =
	{
		ROUTE_axis_plane = {},
		ROUTE_axis_tunnel = {},
	};

	MapRoutes.FLAG_crate2_obj = MapRoutes.FLAG_crate1_obj;
	MapRoutes.SWITCH_turbine = MapRoutes.FLAG_crate1_obj;

	MapRoutes["DEFEND_al_bridge.*"] = MapRoutes.BUILD_bridge;

	MapRoutes["DEFEND_al_tiger[34]"] = MapRoutes.PLANT_Tiger;

	MapRoutes.PLANT_Plane = MapRoutes.PLANT_Jet_Engine;
	MapRoutes["DEFEND_al_plane.*"] = MapRoutes.PLANT_Jet_Engine;
	MapRoutes["DEFEND_al_engine.*"] = MapRoutes.PLANT_Jet_Engine;

	MapRoutes["DEFEND_al_documents.*"] = MapRoutes.FLAG_secret_documents;

	MapRoutes.BUILD_cp = MapRoutes.PLANT_Tiger;
	MapRoutes.DEFEND_al_cp_1 = MapRoutes.PLANT_Tiger;
	MapRoutes["DEFEND_al_cp[23]"] = MapRoutes.PLANT_Tiger;

	MapRoutes["DEFEND_ax_bridge.*"] = MapRoutes.DYNAMITE_bridge;

	MapRoutes["DEFEND_ax_cp.*"] = MapRoutes.DEFEND_ax_tiger1;

	Util.Routes(MapRoutes);
};
